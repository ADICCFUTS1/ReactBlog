{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","root","width","LinearBuffer","classes","React","useState","progress","setProgress","buffer","setBuffer","queryString","window","location","search","txt","URLSearchParams","get","progressRef","useRef","useEffect","current","diff","Math","random","diff2","url1","fetch","then","res","text","data","json","JSON","parse","substr","slice","lista","table","rows","forEach","row","c","cell","push","v","href","console","log","timer","setInterval","clearInterval","className","Typography","variant","component","align","LinearProgress","value","valueBuffer","rootElement","document","getElementById","createRoot","render"],"mappings":"yKAKMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,UAII,SAASC,IACtB,IAAMC,EAAUL,IAChB,EAAgCM,IAAMC,SAAS,GAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,IAAMC,SAAS,IAA3C,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAcC,OAAOC,SAASC,OAG9BC,EAFY,IAAIC,gBAAgBL,GAEhBM,IAAI,OAIpBC,EAAcb,IAAMc,QAAO,eA2DjC,OA1DAd,IAAMe,WAAU,WACdF,EAAYG,QAAU,WACpB,GAAId,EAAW,IACbC,EAAY,GACZE,EAAU,QACL,CACL,IAAMY,EAAuB,GAAhBC,KAAKC,SACZC,EAAwB,GAAhBF,KAAKC,SACnBhB,EAAYD,EAAWe,GACvBZ,EAAUH,EAAWe,EAAOG,GAI9B,GAAIlB,EAAW,IAAK,CAGlB,IAKImB,EAAI,UALI,2CAKJ,OAJK,gDAIL,OAHG,YAGH,YAFG,eAEH,YADG,gBAGXC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAMC,EAAOC,KAAKC,MAAMH,EAAKI,OAAO,IAAIC,MAAM,GAAI,IAG9CC,EAAQ,GACZL,EAAKM,MAAMC,KAAKC,SAAQ,SAACC,GAGvBA,EAAIC,EAAEF,SAAQ,SAACG,GAIbN,EAAMO,KAAKD,EAAKE,GAChBjC,OAAOC,SAASiC,KAAOT,EAAMtB,SAGjCgC,QAAQC,IAAIX,EAAMtB,YAO5BV,IAAMe,WAAU,WACd,IAAM6B,EAAQC,aAAY,WACxBhC,EAAYG,YACX,KAEH,OAAO,WACL8B,cAAcF,MAEf,IAGD,sBAAKG,UAAWhD,EAAQH,KAAxB,UACE,cAACoD,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAA9C,sBAGA,uBACA,cAACC,EAAA,EAAD,CAAgBH,QAAQ,SAASI,MAAOnD,EAAUoD,YAAalD,OCnFrE,IAAMmD,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.88fe2ced.chunk.js","sourcesContent":["import React /*, { useState, useEffect } */ from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  }\n});\n\nexport default function LinearBuffer() {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n  /* VARS SIMPLES*/\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  //const v = urlParams.get(\"v\");\n  const txt = urlParams.get(\"txt\");\n\n  //console.log(v + \"  \" + m);\n  /* */\n  const progressRef = React.useRef(() => {});\n  React.useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n      //console.log(progress);\n\n      if (progress > 100) {\n        //const output = document.querySelector(\".output\");\n\n        const url = \"https://docs.google.com/spreadsheets/d/\";\n        const ssid = \"1-kq0XXTaxdl98FaqpLtgQo5cWmWy8LpbwVbppjvq3Uk\";\n        const q1 = \"/gviz/tq?\";\n        const q2 = \"tqx=out:json\";\n        const q3 = \"sheet=Sheet6\";\n        let url1 = `${url}${ssid}${q1}&${q2}&${q3}`;\n\n        fetch(url1)\n          .then((res) => res.text())\n          .then((data) => {\n            const json = JSON.parse(data.substr(47).slice(0, -2));\n            //console.log(json.table);\n            //const headings = makeCell(output,'','heading');\n            let lista = [];\n            json.table.rows.forEach((row) => {\n              //console.log(row);\n              //const div = makeCell(output,'','row');\n              row.c.forEach((cell) => {\n                //const ele1 = makeCell(div,`${cell.v}`,'box');\n                //console.log(cell.v);\n                //console.log(url1);\n                lista.push(cell.v);\n                window.location.href = lista[txt];\n              });\n            });\n            console.log(lista[txt]);\n          });\n        //window.location.href = cell.v;\n      }\n    };\n  });\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" component=\"h5\" align=\"center\">\n        Cargando\n      </Typography>\n      <br />\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}